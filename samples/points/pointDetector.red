Red [	Title:   "Laplacian Filter "	Author:  "Francois Jouen"	File: 	 %pointDetector.red	Needs:	 'View]; last Red Master required!#include %../../libs/redcv.red ; for redCV functionsmargins: 10x10defSize: 512x512img1: rcvCreateImage defSizedst:  rcvCreateImage defSizeisFile: falsemulti: 1.0bias: 0.0loadImage: does [    isFile: false	canvas/image/rgb: black	tmp: request-file	if not none? tmp [		fileName: to string! to-local-file tmp		win/text: fileName		either cb/data [img1: rcvLoadImage/grayscale tmp]					   [img1: rcvLoadImage tmp]		dst:  rcvCloneImage img1		either (img1/size/x = img1/size/y) [bb/size: 120x120] [bb/size: 160x120]		bb/image: img1		rcvPointDetector img1 dst multi bias		canvas/image: dst		isFile: true	]]; ***************** Test Program ****************************view win: layout [		title "Points"		origin margins space margins		cb: check "Grayscale" 		button 60 "Load" 		[loadImage]								button 60 "Quit" 		[rcvReleaseImage img1 								rcvReleaseImage dst Quit]		return		bb: base 160x120 img1				return 		sl: slider 400 [multi: to-float 1.0 + (face/data * 25.0)						f/text: form multi						if isFile [rcvPointDetector img1 dst multi bias]						]		f: field 100 "1.0"		return		sl2: slider 400 [bias: to-float face/data * 255.0						f2/text: form bias						if isFile [rcvPointDetector img1 dst multi bias]						]		f2: field 100 "0.0"		return		canvas: base 512x512 dst	]