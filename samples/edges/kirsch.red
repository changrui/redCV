Red [	Title:   "Kirsch Filter "	Author:  "Francois Jouen"	File: 	 %kirsch.red	Needs:	 'View]; last Red Master required!#include %../../libs/redcv.red ; for redCV functionsmargins: 10x10defSize: 512x512newSize: 512x512img1: rcvCreateImage defSizegray: rcvCreateImage defSizedst:  rcvCreateImage defSizecurrentImage:  rcvCreateImage defSizeisFile: falseloadImage: does [    isFile: false	canvas/image/rgb: black	tmp: request-file	if not none? tmp [		win/text: copy "Edges detection: Kirsch "		append win/text to string! tmp		img1: rcvLoadImage tmp		gray: rcvLoadImage/grayscale tmp		currentImage rcvCreateImage img1/size		either cb/data [currentImage: rcvCloneImage gray]					   [currentImage: rcvCloneImage img1]				;		; update faces		either (img1/size/x = img1/size/y) [bb/size: 120x120] [bb/size: 160x120]			canvas/size: currentImage/size				if currentImage/size/x >= defSize/x [			win/size/x: currentImage/size/x + 20			]				if currentImage/size/y >= defSize/y [			win/size/y: currentImage/size/y + 220					]				canvas/offset/x: (win/size/x - currentImage/size/x) / 2				dst:  rcvCloneImage currentImage		bb/image: img1		rcvKirsch currentImage dst currentImage/size 3		canvas/image: dst		r1/data: false		r2/data: false		r3/data: true		r4/data: false		isFile: true		;defSize/y: img1/size/y	]]; ***************** Test Program ****************************view win: layout [		title "Edges detection: Kirsch"		origin margins space margins		button 60 "Load" 		[loadImage]			cb: check "Grayscale" 	[					either cb/data  [currentImage: rcvCloneImage gray]					[currentImage: rcvCloneImage img1]					dst:  rcvCloneImage currentImage					rcvKirsch currentImage dst currentImage/size 3 					canvas/image: dst					r1/data: false					r2/data: false					r3/data: true					r4/data: false		]					button 60 "Quit" 		[rcvReleaseImage img1 								rcvReleaseImage dst 								rcvReleaseImage gray								rcvReleaseImage currentImage								Quit]		return		bb: base 160x120 img1		return		text middle 100x20 "Kirsch Direction"		r1: radio "Horizontal" 	[rcvKirsch currentImage dst currentImage/size 1]		r2: radio "Vertical" 	[rcvKirsch currentImage dst currentImage/size 2]			r3:	radio "Both" 		[rcvKirsch currentImage dst currentImage/size 3]		r4:	radio "Magnitude" 	[rcvKirsch currentImage dst currentImage/size 4]		return		canvas: base 512x512 dst			do [r3/data: true]]